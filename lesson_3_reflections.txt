Q. When would you want to use a remote repository rather than keeping all your work local?

When collaborating with others, when working from multiple worksites, or as a backup.

Q. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Might not be ready to share with public yet.

Q. Describe the differences between forks, clones, and branches. When would you use one instead of another?

Clone when you want to modify code.
Branch as a subset of all modifications you are making, e.g. when want to create a new feature.
Fork when you want to produce a modified release of the code without changing the original.

Q. What is the benefit of having a copy of the last known state of the remote stored locally?

Allows you access to all commits from remote even if you are not online, and makes it easier to resolve merge conflicts.

Q. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Using a shared drive or a cloud storage service, or perhaps sending changes via email.  
There would be less overhead of learning to use the service, but it would be harder to
track changes, detect conflicts, etc.

Q. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Perhaps when master is the 'production' code and you don't want to merge commits until the feature is complete.
If the feature is experimental you may want to be able to abandon it by reverting to master.
If several people are making different changes in parallel working in branches allows them to do so easily.
Working directly in master is simpler if none of the above are relevant.
